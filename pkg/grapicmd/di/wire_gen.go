// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package di

import (
	"github.com/izumin5210/grapi/pkg/clui"
	"github.com/izumin5210/grapi/pkg/command"
	"github.com/izumin5210/grapi/pkg/grapicmd"
	"github.com/izumin5210/grapi/pkg/grapicmd/internal/module"
	"github.com/izumin5210/grapi/pkg/grapicmd/internal/usecase"
)

// Injectors from wire.go:

func NewUI(ctx *grapicmd.Ctx) clui.UI {
	cluiUI := ProvideUI(ctx)
	return cluiUI
}

func NewCommandExecutor(ctx *grapicmd.Ctx) command.Executor {
	cluiUI := ProvideUI(ctx)
	executor := ProvideCommandExecutor(ctx, cluiUI)
	return executor
}

func NewGenerator(ctx *grapicmd.Ctx) module.Generator {
	cluiUI := ProvideUI(ctx)
	generator := ProvideGenerator(ctx, cluiUI)
	return generator
}

func NewScriptLoader(ctx *grapicmd.Ctx) module.ScriptLoader {
	cluiUI := ProvideUI(ctx)
	executor := ProvideCommandExecutor(ctx, cluiUI)
	scriptLoader := ProvideScriptLoader(ctx, executor)
	return scriptLoader
}

func NewInitializeProjectUsecase(ctx *grapicmd.Ctx) usecase.InitializeProjectUsecase {
	config := ProvideGexConfig(ctx)
	cluiUI := ProvideUI(ctx)
	generator := ProvideGenerator(ctx, cluiUI)
	initializeProjectUsecase := ProvideInitializeProjectUsecase(ctx, config, cluiUI, generator)
	return initializeProjectUsecase
}

func NewExecuteProtocUsecase(ctx *grapicmd.Ctx) usecase.ExecuteProtocUsecase {
	config := ProvideGexConfig(ctx)
	cluiUI := ProvideUI(ctx)
	executor := ProvideCommandExecutor(ctx, cluiUI)
	generator := ProvideGenerator(ctx, cluiUI)
	executeProtocUsecase := ProvideExecuteProtocUsecase(ctx, config, cluiUI, executor, generator)
	return executeProtocUsecase
}
